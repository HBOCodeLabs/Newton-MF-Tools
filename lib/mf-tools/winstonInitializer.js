// Generated by CoffeeScript 1.6.2
(function() {
  var createFileTransport, getFileTransport, initializeLogger, winston, _;

  _ = require('underscore');

  winston = require('winston');

  createFileTransport = function(config, name) {
    var options, transport, _ref;

    options = config != null ? (_ref = config.files) != null ? _ref[name] : void 0 : void 0;
    if (!options) {
      options = {
        filename: "" + name + ".log"
      };
    }
    options = _.defaults(options, config != null ? config.defaultFileOptions : void 0);
    transport = new winston.transports.File(options);
    return transport;
  };

  getFileTransport = function(config, name, fileTransports) {
    if (!fileTransports[name]) {
      fileTransports[name] = createFileTransport(config, name);
    }
    return fileTransports[name];
  };

  initializeLogger = function(config) {
    var consoleOptions, consoleTransport, effectiveOptions, fileTransport, fileTransports, logger, loggerOptions, name, options, transport, transports, _i, _len, _ref, _ref1;

    fileTransports = {};
    _ref = config != null ? config.loggers : void 0;
    for (name in _ref) {
      options = _ref[name];
      transports = [];
      effectiveOptions = _.defaults(options, config != null ? (_ref1 = config.loggers) != null ? _ref1["default"] : void 0 : void 0);
      if (effectiveOptions.console) {
        consoleOptions = _.clone(config.defaultConsoleOptions);
        if (name !== 'default') {
          consoleOptions.label = name;
        }
        consoleTransport = new winston.transports.Console(consoleOptions);
        transports.push(consoleTransport);
      }
      if (effectiveOptions.file) {
        fileTransport = getFileTransport(config, effectiveOptions.file, fileTransports);
        transports.push(fileTransport);
      }
      loggerOptions = {
        transports: transports
      };
      if (name === 'exceptions') {
        loggerOptions.exceptionHandlers = transports;
      }
      logger = new winston.Logger(loggerOptions);
      winston.loggers.add(name, null, true);
      if (name === 'default') {
        winston.clear();
        for (_i = 0, _len = transports.length; _i < _len; _i++) {
          transport = transports[_i];
          winston.add(transport, null, true);
        }
        winston.loggers.options.transports = transports;
      }
    }
    winston.info('logging initiazlied');
  };

  module.exports = initializeLogger;

}).call(this);

/*
//@ sourceMappingURL=winstonInitializer.map
*/
